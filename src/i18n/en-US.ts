import { TranslationKey } from './index';

export const enUS: TranslationKey = {
  common: {
    ok: 'OK',
    cancel: 'Cancel',
    confirm: 'Confirm',
    delete: 'Delete',
    edit: 'Edit',
    save: 'Save',
    close: 'Close',
    loading: 'Loading...',
    error: 'Error',
    warning: 'Warning',
    success: 'Success',
    clear: 'Clear',
    export: 'Export',
    import: 'Import',
    refresh: 'Refresh',
    connect: 'Connect',
    disconnect: 'Disconnect',
    retry: 'Retry',
    copy: 'Copy',
    back: 'Back',
    next: 'Next',
    submit: 'Submit',
    reset: 'Reset',
  },
  
  tabs: {
    config: 'Configuration',
    explorer: 'MCP Explorer',
    history: 'History',
    tools: 'Tools',
    resources: 'Resources',
    prompts: 'Prompts',
  },
  
  config: {
    title: 'MCP Server Configuration',
    serverName: 'Server Name',
    serverNamePlaceholder: 'Enter server name',
    serverHost: 'Server Host',
    serverHostPlaceholder: 'e.g., http://localhost:8000',
    ssePath: 'SSE Path',
    ssePathPlaceholder: 'e.g., /sse',
    messagePath: 'Message Path',
    messagePathPlaceholder: 'e.g., /message',
    authentication: 'Authentication',
    authType: 'Auth Type',
    testConnection: 'Test Connection',
    saveConfig: 'Save Config',
    savedConfigs: 'Saved Configurations',
    loadConfig: 'Load Config',
    deleteConfig: 'Delete Config',
    exportConfigs: 'Export Configs',
    importConfigs: 'Import Configs',
    autoSave: 'Auto Save Config',
    autoSaveTooltip: 'Automatically save configuration after successful connection',
    noSavedConfigs: 'No saved configurations',
    connectionStatus: {
      connected: 'Connected',
      connecting: 'Connecting...',
      disconnected: 'Disconnected',
      error: 'Connection Error',
    },
    messages: {
      serverNameRequired: 'Please enter server name',
      serverHostRequired: 'Please enter server host',
      serverHostFormat: 'Please enter correct host format, e.g., http://127.0.0.1:8020 (do not include path)',
      ssePathRequired: 'Please enter SSE path',
      connectSuccess: 'Connected successfully',
      connectFailed: 'Connection failed',
      disconnectSuccess: 'Disconnected',
      disconnectFailed: 'Failed to disconnect',
      configSavedAuto: 'Configuration saved automatically',
      configNotSet: 'MCP server configuration not set',
      pleaseCheckConfig: 'Connection failed, please check server configuration',
    },
  },
  
  auth: {
    none: 'No Authentication',
    apiKey: 'API Key',
    basic: 'Basic Auth',
    custom: 'Custom Headers',
    combined: 'Combined Auth',
    apiKeyLabel: 'API Key',
    apiKeyPlaceholder: 'Enter API Key',
    username: 'Username',
    usernamePlaceholder: 'Enter username',
    password: 'Password',
    passwordPlaceholder: 'Enter password',
    headerName: 'Header Name',
    headerNamePlaceholder: 'e.g., Authorization',
    headerValue: 'Header Value',
    headerValuePlaceholder: 'Enter header value',
    prefix: 'Prefix',
    prefixPlaceholder: 'e.g., Bearer ',
    urlParams: 'URL Parameters',
    paramName: 'Parameter Name',
    paramValue: 'Parameter Value',
    addParam: 'Add Parameter',
    removeParam: 'Remove Parameter',
    combinedMode: 'Combined Authentication Mode',
    combinedModeDesc: 'You can configure multiple authentication methods simultaneously, and the system will automatically combine and apply these authentication configurations',
    enableApiKey: 'Enable API Key Authentication',
    enableUrlParams: 'Enable URL Parameter Authentication',
    enableCustomHeaders: 'Enable Custom Header Authentication',
  },
  
  explorer: {
    title: 'MCP Protocol Explorer',
    noConnection: 'Not connected to MCP server',
    connectFirst: 'Please connect to an MCP server in the configuration page first',
    serverInfo: 'Server Information',
    protocolVersion: 'Protocol Version',
    capabilities: 'Server Capabilities',
    instructions: 'Instructions',
  },
  
  tools: {
    title: 'Tools',
    noTools: 'No tools available',
    selectTool: 'Please select a tool to test',
    toolName: 'Tool Name',
    description: 'Description',
    parameters: 'Parameters',
    callTool: 'Call Tool',
    result: 'Result',
    securityCheck: 'Security Check',
    pleaseInput: 'Please enter',
    riskLevel: {
      low: 'Low Risk',
      medium: 'Medium Risk',
      high: 'High Risk',
      critical: 'Critical Risk',
    },
  },
  
  resources: {
    title: 'Resources',
    noResources: 'No resources available',
    selectResource: 'Please select a resource to read',
    resourceName: 'Resource Name',
    resourceUri: 'Resource URI',
    mimeType: 'MIME Type',
    readResource: 'Read Resource',
    content: 'Content',
    templates: 'Resource Templates',
    staticResources: 'Static Resources',
  },
  
  prompts: {
    title: 'Prompts',
    noPrompts: 'No prompts available',
    selectPrompt: 'Please select a prompt to get',
    promptName: 'Prompt Name',
    arguments: 'Arguments',
    getPrompt: 'Get Prompt',
    messages: 'Messages',
    pleaseInput: 'Please enter',
  },
  
  history: {
    title: 'Call History',
    noHistory: 'No history records',
    clearAll: 'Clear All',
    deleteItem: 'Delete Record',
    confirmClear: 'Are you sure you want to clear all history records?',
    confirmDelete: 'Are you sure you want to delete this record?',
    timestamp: 'Timestamp',
    duration: 'Duration',
    type: 'Type',
    name: 'Name',
    parameters: 'Parameters',
    result: 'Result',
    securityWarnings: 'Security Warnings',
    exportHistory: 'Export History',
  },
  
  security: {
    warning: 'Security Warning',
    riskAssessment: 'Risk Assessment',
    recommendations: 'Security Recommendations',
    noRisks: 'No security risks detected',
    potentialRisks: 'Potential Risks',
  },
  
  errors: {
    connectionFailed: 'Connection failed',
    invalidConfig: 'Invalid configuration',
    toolCallFailed: 'Tool call failed',
    resourceReadFailed: 'Resource read failed',
    promptGetFailed: 'Prompt get failed',
    saveConfigFailed: 'Failed to save configuration',
    loadConfigFailed: 'Failed to load configuration',
    importFailed: 'Import failed',
    exportFailed: 'Export failed',
    networkError: 'Network error',
    timeout: 'Request timeout',
    unauthorized: 'Authentication failed',
    serverError: 'Server error',
  },
  
  success: {
    connected: 'Connected successfully',
    disconnected: 'Disconnected',
    configSaved: 'Configuration saved successfully',
    configLoaded: 'Configuration loaded successfully',
    configDeleted: 'Configuration deleted successfully',
    historyCleared: 'History cleared',
    itemDeleted: 'Record deleted successfully',
    exportSuccess: 'Export successful',
    importSuccess: 'Import successful',
  },
  
  app: {
    title: 'MCP Security Inspector',
    description: 'Model Context Protocol Security Testing Tool',
    version: 'Version',
    language: 'Language',
    changeLanguage: 'Change Language',
  },
}; 